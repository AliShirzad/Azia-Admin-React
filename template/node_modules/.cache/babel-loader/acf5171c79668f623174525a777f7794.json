{"ast":null,"code":"import _objectSpread from \"/Users/jyothish/Documents/azia-react-pro/template/demo_1/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jyothish/Documents/azia-react-pro/template/demo_1/src/app/ui-elements/Modals.js\";\nimport React, { Component } from \"react\";\nimport ComponentsSidebar from \"../shared/ComponentsSidebar\";\nimport { Button, Modal } from \"react-bootstrap\";\nexport class Modals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showBasicModal: false,\n      showSmallModal: false,\n      showLargeModal: false,\n      showAlertModal1: false,\n      showAlertModal2: false,\n      animationModal: {\n        show: false,\n        className: \"\"\n      }\n    };\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal(type) {\n    if (type === \"basic\") {\n      this.setState({\n        showBasicModal: false\n      });\n    } else if (type === \"small\") {\n      this.setState({\n        showSmallModal: false\n      });\n    } else if (type === \"large\") {\n      this.setState({\n        showLargeModal: false\n      });\n    } else if (type === \"alert1\") {\n      this.setState({\n        showAlertModal1: false\n      });\n    } else if (type === \"alert2\") {\n      this.setState({\n        showAlertModal2: false\n      });\n    }\n  }\n\n  showAnimationModal(animClassName) {\n    console.log(\"clicked\"); // this.state.animationModal.className = animClassName;\n\n    this.setState({\n      animationModal: _objectSpread({}, this.state.animationModal, {\n        show: true\n      })\n    });\n  }\n\n  closeAnimationModal() {\n    this.setState({\n      animationModal: _objectSpread({}, this.state.animationModal, {\n        show: false\n      })\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container d-flex p-md-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ComponentsSidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"az-content-body pd-lg-l-40 d-flex flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"az-content-breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Components\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"UI Elements\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Modals\")), React.createElement(\"h2\", {\n      className: \"az-content-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Modals\"), React.createElement(\"div\", {\n      className: \"az-content-label mg-b-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Basic Modal\"), React.createElement(\"p\", {\n      className: \"mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Below is the static example of the basic modal.\"), React.createElement(\"div\", {\n      className: \"pd-20 bg-gray-800\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Modal.Dialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Message Preview\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Why We Use Electoral College, Not Popular Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\", \" \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"indigo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Save changes\"), React.createElement(Button, {\n      variant: \"outline-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"div\", {\n      className: \"tx-center pd-y-20 bg-gray-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        showBasicModal: true\n      }),\n      variant: \"primary\",\n      className: \"btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"View Live Demo\"), React.createElement(Modal, {\n      show: this.state.showBasicModal,\n      onHide: () => this.closeModal(\"basic\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Message Preview\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Why We Use Electoral College, Not Popular Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\", \" \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"indigo\",\n      onClick: () => this.closeModal(\"basic\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Save changes\"), React.createElement(Button, {\n      variant: \"outline-light\",\n      onClick: () => this.closeModal(\"basic\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"hr\", {\n      className: \"mg-y-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"az-content-label mg-b-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Small Modal\"), React.createElement(\"p\", {\n      className: \"mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Below is the static example of small modal.\"), React.createElement(\"div\", {\n      className: \"pd-20 bg-gray-800\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Modal.Dialog, {\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Message Preview\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Why We Use Electoral College, Not Popular Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\", \" \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"indigo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Save changes\"), React.createElement(Button, {\n      variant: \"outline-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"div\", {\n      className: \"tx-center pd-y-20 bg-gray-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        showSmallModal: true\n      }),\n      variant: \"primary\",\n      className: \"btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"View Live Demo\"), React.createElement(Modal, {\n      show: this.state.showSmallModal,\n      size: \"sm\",\n      onHide: () => this.closeModal(\"small\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Message Preview\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Why We Use Electoral College, Not Popular Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\", \" \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"indigo\",\n      onClick: () => this.closeModal(\"small\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Save changes\"), React.createElement(Button, {\n      variant: \"outline-light\",\n      onClick: () => this.closeModal(\"small\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"hr\", {\n      className: \"mg-y-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"az-content-label mg-b-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Large Modal\"), React.createElement(\"p\", {\n      className: \"mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Below is the static example of large modal.\"), React.createElement(\"div\", {\n      className: \"pd-20 bg-gray-800\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Modal.Dialog, {\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Message Preview\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Why We Use Electoral College, Not Popular Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\", \" \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"indigo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Save changes\"), React.createElement(Button, {\n      variant: \"outline-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"div\", {\n      className: \"tx-center pd-y-20 bg-gray-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        showLargeModal: true\n      }),\n      variant: \"primary\",\n      className: \"btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"View Live Demo\"), React.createElement(Modal, {\n      show: this.state.showLargeModal,\n      size: \"lg\",\n      onHide: () => this.closeModal(\"large\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Message Preview\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Why We Use Electoral College, Not Popular Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\", \" \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"indigo\",\n      onClick: () => this.closeModal(\"large\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Save changes\"), React.createElement(Button, {\n      variant: \"outline-light\",\n      onClick: () => this.closeModal(\"large\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(\"hr\", {\n      className: \"mg-y-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"az-content-label mg-b-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Modal Alert Messages\"), React.createElement(\"p\", {\n      className: \"mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Below is the static example of modal alert messages.\"), React.createElement(\"div\", {\n      className: \"pd-20 bg-gray-800\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Modal.Dialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      className: \"tx-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"i\", {\n      className: \"icon ion-ios-checkmark-circle-outline tx-100 tx-success lh-1 mg-t-20 d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"tx-success mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Congratulations!\"), React.createElement(\"p\", {\n      className: \"mg-b-20 mg-x-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success pd-x-25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Continue\")))), React.createElement(\"div\", {\n      className: \"tx-center pd-y-20 bg-gray-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        showAlertModal1: true\n      }),\n      variant: \"primary\",\n      className: \"btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"View Live Demo\"), React.createElement(Modal, {\n      show: this.state.showAlertModal1,\n      onHide: () => this.closeModal(\"alert1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      className: \"tx-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"aria-label\": \"Close\",\n      onClick: () => this.closeModal(\"alert1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"i\", {\n      className: \"icon ion-ios-checkmark-circle-outline tx-100 tx-success lh-1 mg-t-20 d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"tx-success mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Congratulations!\"), React.createElement(\"p\", {\n      className: \"mg-b-20 mg-x-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success pd-x-25\",\n      onClick: () => this.closeModal(\"alert1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Continue\")))), React.createElement(\"div\", {\n      className: \"pd-20 bg-gray-800 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Modal.Dialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      className: \"tx-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"i\", {\n      className: \"icon icon ion-ios-close-circle-outline tx-100 tx-danger lh-1 mg-t-20 d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"tx-danger mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Error: Cannot process your entry!\"), React.createElement(\"p\", {\n      className: \"mg-b-20 mg-x-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger pd-x-25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"Continue\")))), React.createElement(\"div\", {\n      className: \"tx-center pd-y-20 bg-gray-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        showAlertModal2: true\n      }),\n      variant: \"primary\",\n      className: \"btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"View Live Demo\"), React.createElement(Modal, {\n      show: this.state.showAlertModal2,\n      onHide: () => this.closeModal(\"alert2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      className: \"tx-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"aria-label\": \"Close\",\n      onClick: () => this.closeModal(\"alert2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"i\", {\n      className: \"icon icon ion-ios-close-circle-outline tx-100 tx-danger lh-1 mg-t-20 d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"tx-danger mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Error: Cannot process your entry!\"), React.createElement(\"p\", {\n      className: \"mg-b-20 mg-x-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger pd-x-25\",\n      onClick: () => this.closeModal(\"alert2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Continue\")))), React.createElement(\"hr\", {\n      className: \"mg-y-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"az-content-label mg-b-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"Modal Animation Effects\"), React.createElement(\"p\", {\n      className: \"mg-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Below are different kind of effects to choose from.\"), React.createElement(\"div\", {\n      className: \"row row-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.showAnimationModal(\"effect-scale\"),\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"Scale\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.showAnimationModal(\"effect-slide-in-right\"),\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Slide In Right\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20 mg-md-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-slide-in-bottom\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Slide In Bottom\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20 mg-xl-t-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-newspaper\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"Newspaper\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-fall\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Fall\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-flip-horizontal\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Flip Horizontal\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-flip-vertical\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, \"Flip Vertical\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-super-scaled\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"Super Scaled\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-sign\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"Sign\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-rotate-bottom\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, \"Rotate Bottom\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-rotate-left\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, \"Rotate Left\")), React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-4 col-xl-3 mg-t-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.showAnimationModal(\"effect-just-me\");\n      },\n      variant: \"dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"Just Me\"))), React.createElement(Modal, {\n      show: this.state.animationModal.show,\n      className: this.state.animationModal.className,\n      onHide: () => this.closeAnimationModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, \"Message Preview\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, \"Why We Use Electoral College, Not Popular Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\", \" \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"indigo\",\n      onClick: () => this.closeAnimationModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, \"Save changes\"), React.createElement(Button, {\n      variant: \"outline-light\",\n      onClick: () => this.closeAnimationModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(\"table\", {\n      className: \"table az-table-reference\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"wd-40p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, \"Class Reference\"), React.createElement(\"th\", {\n      className: \"wd-60p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, \"Value\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      className: \"pd-0 bg-transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, \"className=\\\"modal fade effect-[value]\\\"\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, \"scale | slide-in-right | slide-in-bottom | newspaper | fall | flip-horizontal | flip-vertical | super-scaled | sign | rotate-bottom | rotate-left | just-me\")))), React.createElement(\"div\", {\n      className: \"mg-lg-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default Modals;","map":{"version":3,"sources":["/Users/jyothish/Documents/azia-react-pro/template/demo_1/src/app/ui-elements/Modals.js"],"names":["React","Component","ComponentsSidebar","Button","Modal","Modals","constructor","props","state","showBasicModal","showSmallModal","showLargeModal","showAlertModal1","showAlertModal2","animationModal","show","className","closeModal","bind","type","setState","showAnimationModal","animClassName","console","log","closeAnimationModal","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ComponentsSidebar from \"../shared/ComponentsSidebar\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nexport class Modals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showBasicModal: false,\n      showSmallModal: false,\n      showLargeModal: false,\n      showAlertModal1: false,\n      showAlertModal2: false,\n      animationModal: {\n        show: false,\n        className: \"\"\n      }\n    };\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal(type) {\n    if (type === \"basic\") {\n      this.setState({ showBasicModal: false });\n    } else if (type === \"small\") {\n      this.setState({ showSmallModal: false });\n    } else if (type === \"large\") {\n      this.setState({ showLargeModal: false });\n    } else if (type === \"alert1\") {\n      this.setState({ showAlertModal1: false });\n    } else if (type === \"alert2\") {\n      this.setState({ showAlertModal2: false });\n    }\n  }\n\n  showAnimationModal(animClassName) {\n    console.log(\"clicked\");\n    // this.state.animationModal.className = animClassName;\n    this.setState({\n      animationModal: { ...this.state.animationModal, show: true }\n    });\n  }\n\n  closeAnimationModal() {\n    this.setState({\n      animationModal: { ...this.state.animationModal, show: false }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container d-flex p-md-0\">\n          <ComponentsSidebar />\n          <div className=\"az-content-body pd-lg-l-40 d-flex flex-column\">\n            <div className=\"az-content-breadcrumb\">\n              <span>Components</span>\n              <span>UI Elements</span>\n              <span>Modals</span>\n            </div>\n            <h2 className=\"az-content-title\">Modals</h2>\n\n            <div className=\"az-content-label mg-b-5\">Basic Modal</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of the basic modal.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              {/* this modal is static modal for presentation purpose. */}\n              <Modal.Dialog>\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"indigo\">Save changes</Button>\n                  <Button variant=\"outline-light\">Close</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n            </div>\n            {/* pd-y-50 */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showBasicModal: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showBasicModal}\n                onHide={() => this.closeModal(\"basic\")}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button\n                    variant=\"indigo\"\n                    onClick={() => this.closeModal(\"basic\")}\n                  >\n                    Save changes\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    onClick={() => this.closeModal(\"basic\")}\n                  >\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n            {/* pd-y-30 */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">Small Modal</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of small modal.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              <Modal.Dialog size={\"sm\"}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"indigo\">Save changes</Button>\n                  <Button variant=\"outline-light\">Close</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showSmallModal: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showSmallModal}\n                size={\"sm\"}\n                onHide={() => this.closeModal(\"small\")}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button\n                    variant=\"indigo\"\n                    onClick={() => this.closeModal(\"small\")}\n                  >\n                    Save changes\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    onClick={() => this.closeModal(\"small\")}\n                  >\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n            {/* pd-y-30 */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">Large Modal</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of large modal.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              {/* this modal is static modal for presentation purpose. */}\n              <Modal.Dialog size={\"lg\"}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"indigo\">Save changes</Button>\n                  <Button variant=\"outline-light\">Close</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showLargeModal: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showLargeModal}\n                size={\"lg\"}\n                onHide={() => this.closeModal(\"large\")}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button\n                    variant=\"indigo\"\n                    onClick={() => this.closeModal(\"large\")}\n                  >\n                    Save changes\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    onClick={() => this.closeModal(\"large\")}\n                  >\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n            {/* pd-y-30 */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">Modal Alert Messages</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of modal alert messages.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              <Modal.Dialog>\n                <Modal.Body className=\"tx-center\">\n                  <button type=\"button\" className=\"close\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon ion-ios-checkmark-circle-outline tx-100 tx-success lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-success mg-b-20\">Congratulations!</h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button type=\"button\" className=\"btn btn-success pd-x-25\">\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showAlertModal1: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showAlertModal1}\n                onHide={() => this.closeModal(\"alert1\")}\n              >\n                <Modal.Body className=\"tx-center\">\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    aria-label=\"Close\"\n                    onClick={() => this.closeModal(\"alert1\")}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon ion-ios-checkmark-circle-outline tx-100 tx-success lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-success mg-b-20\">Congratulations!</h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success pd-x-25\"\n                    onClick={() => this.closeModal(\"alert1\")}\n                  >\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal>\n            </div>\n            {/* modal-footer-demo */}\n\n            <div className=\"pd-20 bg-gray-800 mg-t-20\">\n              <Modal.Dialog>\n                <Modal.Body className=\"tx-center\">\n                  <button type=\"button\" className=\"close\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon icon ion-ios-close-circle-outline tx-100 tx-danger lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-danger mg-b-20\">\n                    Error: Cannot process your entry!\n                  </h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button type=\"button\" className=\"btn btn-danger pd-x-25\">\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showAlertModal2: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showAlertModal2}\n                onHide={() => this.closeModal(\"alert2\")}\n              >\n                <Modal.Body className=\"tx-center\">\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    aria-label=\"Close\"\n                    onClick={() => this.closeModal(\"alert2\")}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon icon ion-ios-close-circle-outline tx-100 tx-danger lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-danger mg-b-20\">\n                    Error: Cannot process your entry!\n                  </h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger pd-x-25\"\n                    onClick={() => this.closeModal(\"alert2\")}\n                  >\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal>\n            </div>\n            {/* modal-footer-demo */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">\n              Modal Animation Effects\n            </div>\n            <p className=\"mg-b-20\">\n              Below are different kind of effects to choose from.\n            </p>\n\n            <div className=\"row row-sm\">\n              <div className=\"col-sm-6 col-md-4 col-xl-3\">\n                <Button\n                  onClick={() => this.showAnimationModal(\"effect-scale\")}\n                  variant=\"dark btn-block\"\n                >\n                  Scale\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3\">\n                <Button\n                  onClick={() =>\n                    this.showAnimationModal(\"effect-slide-in-right\")\n                  }\n                  variant=\"dark btn-block\"\n                >\n                  Slide In Right\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20 mg-md-t-0\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-slide-in-bottom\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Slide In Bottom\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20 mg-xl-t-0\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-newspaper\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Newspaper\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-fall\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Fall\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-flip-horizontal\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Flip Horizontal\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-flip-vertical\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Flip Vertical\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-super-scaled\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Super Scaled\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-sign\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Sign\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-rotate-bottom\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Rotate Bottom\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-rotate-left\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Rotate Left\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-just-me\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Just Me\n                </Button>\n              </div>\n              {/* col-3 */}\n            </div>\n            {/* row */}\n\n            {/* Animation Modal */}\n            <Modal\n              show={this.state.animationModal.show}\n              className={this.state.animationModal.className}\n              onHide={() => this.closeAnimationModal()}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Message Preview</Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                <p>\n                  It is a long established fact that a reader will be distracted\n                  by the readable content of a page when looking at its layout.\n                  The point of using Lorem Ipsum is that it has a more-or-less\n                  normal distribution of letters, as opposed to using 'Content\n                  here, content here', making it look like readable English.{\" \"}\n                </p>\n              </Modal.Body>\n\n              <Modal.Footer>\n                <Button\n                  variant=\"indigo\"\n                  onClick={() => this.closeAnimationModal()}\n                >\n                  Save changes\n                </Button>\n                <Button\n                  variant=\"outline-light\"\n                  onClick={() => this.closeAnimationModal()}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            {/* Animation Modal */}\n\n            <table className=\"table az-table-reference\">\n              <thead>\n                <tr>\n                  <th className=\"wd-40p\">Class Reference</th>\n                  <th className=\"wd-60p\">Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code className=\"pd-0 bg-transparent\">\n                      className=\"modal fade effect-[value]\"\n                    </code>\n                  </td>\n                  <td>\n                    scale | slide-in-right | slide-in-bottom | newspaper | fall\n                    | flip-horizontal | flip-vertical | super-scaled | sign |\n                    rotate-bottom | rotate-left | just-me\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <div className=\"mg-lg-b-30\"></div>\n          </div>\n          {/* az-content-body */}\n        </div>\n        {/* container */}\n      </div>\n    );\n  }\n}\n\nexport default Modals;\n"]},"metadata":{},"sourceType":"module"}